{"version":3,"sources":["axios.js","data/actions.js","components/TournamentSetup/TournamentSetup.js","components/TournamentSetup/index.js","components/Game/Game.js","components/Game/index.js","components/Rounds/Rounds.js","components/Rounds/index.js","components/App/App.js","components/App/index.js","reportWebVitals.js","data/initial.js","data/reducers.js","data/store.js","index.js"],"names":["axios","create","baseURL","headers","Accept","createGamesFromPlayers","listOfPlayers","tournamentId","roundNumber","reduce","acc","player","index","game","id","uuid","playerA","playerB","playerAScore","playerBScore","loadHistoricPlayers","data","type","payload","TournamentSetup","startTournament","addPlayerName","getHistoricPlayers","historicPlayerList","useState","playerName","setPlayerName","tournamentName","setTournamentName","winningScore","setWinningScore","getInitialPlayers","useEffect","correctPlayerNumber","n","parseInt","Math","ceil","log","floor","isExisitingName","some","name","toLowerCase","className","onSubmit","e","preventDefault","entrants","htmlFor","onChange","currentTarget","value","disabled","onClick","length","style","display","width","flexWrap","map","overflow","connect","state","playerCount","dispatch","tournamentData","tournament","games","post","tournamentStartAction","addPlayerNameAction","get","then","Game","playerOne","playerTwo","submitWinner","isFinal","playerOneScore","setPlayerOneScore","playerTwoScore","setPlayerTwoScore","scores","gameWinnerAction","Rounds","round","reset","submitRound","listOfGames","listOfWinners","submitRoundAction","App","tournamentStarted","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isFinished","randomizer","sort","random","reducer","action","newRound","filter","gameWinner","addNewPlayerAtStart","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","initial","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cbbc3e3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://localhost:44322/api/\",\n    \n    headers: {\n        Accept: \"application/json\"\n    },\n});","import {v4 as uuid} from \"uuid\";\nimport axios from \"../axios\";\n\nexport const createGamesFromPlayers = (listOfPlayers, tournamentId, roundNumber) => {\n  return listOfPlayers.reduce((acc, player, index) => {\n    if (index % 2 === 1) {\n      return acc;\n    }\n    const game = {\n      id: uuid(),\n      roundNumber: roundNumber,\n      tournamentId: tournamentId,\n      playerA: player,\n      playerB: listOfPlayers[index + 1],\n      playerAScore: 0,\n      playerBScore: 0,\n    };\n    return [...acc, game];\n  }, []);\n};\n\n\nexport const tournamentStartAction = (tournamentData) => {\n    \n    const tournament = {\n        id: uuid(),\n        name: tournamentData.tournamentName,\n        entrants : tournamentData.entrants,\n        winningScore: tournamentData.winningScore\n    }\n\n    const games = createGamesFromPlayers(tournamentData.entrants, tournament.id, 1);\n\n    axios.post(\"/tournaments\", tournament)\n\n    return {\n      type: \"START_TOURNAMENT\",\n      payload: {\n        ...tournament,\n        games: games\n      },\n    };\n}\n\nexport const resetAction = () => {\n    return {\n        type: \"RESET\",\n    }\n}\n\nexport const gameWinnerAction = (player, scores) => {\n    return {\n        type: \"WINNER\",\n        payload: {\n          player,\n          scores\n        }\n    }\n}\n\nexport const submitRoundAction = (listOfPlayers, tournamentId, roundNumber) => {\n\n    const games = createGamesFromPlayers(\n     listOfPlayers,\n     tournamentId,\n     roundNumber\n   );\n   \n   axios.post(\"/games\", games);\n\n    return {\n        type: \"SUBMIT_ROUND\",\n        payload: games,\n    }\n}\n\nexport const addPlayerNameAction = (player) => {\n    return {\n        type: \"ADD_PLAYER\",\n        payload: player\n    }\n}\n\nexport const  getHistoricPlayersAction = () => {\nreturn (dispatch) => {\n    axios.get('/players').then(( {data} ) => {\n        dispatch(loadHistoricPlayers(data));\n    });\n  }\n}\n\nexport const loadHistoricPlayers = (data) => {\n  return {\n      type: \"LOAD_HISTORIC_PLAYERS\",\n      payload: data\n  }\n}\n\n      \n","import React, {  useEffect, useState } from 'react';\n\n\nconst TournamentSetup = ({ startTournament, addPlayerName, listOfPlayers, getHistoricPlayers, historicPlayerList }) => {\n\n    const [playerName, setPlayerName] = useState(\"\");\n    const [tournamentName, setTournamentName] = useState(\"\");\n    const [winningScore, setWinningScore] = useState(\"7\");\n    \n    const getInitialPlayers = getHistoricPlayers;\n\n    const handlePlayerName = (e) => setPlayerName(e.currentTarget.value);\n\n    useEffect (() => {\n        getInitialPlayers();\n    }, [getInitialPlayers]);\n  \n\n    const playerNameSubmit = (e) => {\n        e.preventDefault();\n        if (playerName === \"\") {\n            return;\n\n        } else if (playerName !== \"\") {\n            addPlayerName(playerName);\n        }\n\n        setPlayerName(\"\");\n    }\n\n    const handleTournamentName = (e) => {\n        const tournamentName = e.currentTarget.value;\n        setTournamentName(tournamentName);\n    }\n\n    const tournamentSubmit = (e) => {\n\n        e.preventDefault();\n\n        const tournamentData = {\n            tournamentName: tournamentName,\n            winningScore: winningScore,\n            entrants: listOfPlayers,\n        }\n\n        startTournament(tournamentData);\n    }\n\n    const correctPlayerNumber = (n) => {\n\n        if (n === 0) {\n            return false;\n        }\n\n        return parseInt((Math.ceil((Math.log(n) / Math.log(2))))) === parseInt((Math.floor(((Math.log(n) / Math.log(2))))));\n    }\n\n    const isDisabled = () => listOfPlayers.length < 4 || !correctPlayerNumber(listOfPlayers.length) ? true : false;\n\n    const isExisitingName = () => listOfPlayers.some((player) => player.name.toLowerCase() === playerName.toLowerCase());\n\n\n    return (\n        <div>\n        <h1 className=\"main-header animate__animated animate__bounce heading\">Welcome to Bounce</h1>\n        <div className=\"setup-page-container\">\n            <section className=\"table-container animate__animated animate__flipInX\">\n                <div className=\"tournament-form animate__animated animate__flipInX\">\n                    <div>\n                        <form onSubmit={ tournamentSubmit }>\n                            <div className=\"player-name-form\">\n                                <p htmlFor=\"playerName\">Enter Player Name:</p>\n                                <input\n                                    className=\"form-fields\"\n                                    type=\"text\"\n                                    id=\"playerName\"\n                                    onChange={ handlePlayerName }\n                                    value={ playerName }/>\n                            <button className=\"add-btn\" disabled={ isExisitingName() } onClick={ playerNameSubmit }>Add Player</button>\n                            {isExisitingName() && <span className=\"error-messages\">You cannot have two names that are the same</span>}\n                                    {playerName === \"\" ? <p className=\"error-messages\">Please Enter a valid name</p> : null}\n                            </div>\n\n                            <div>\n                                <p>Select Winning Score:</p>\n                                <select className=\"form-fields\" onChange={e => setWinningScore(e.currentTarget.value)}>\n                                    <option className=\"form-fields\" value={7}>7</option>\n                                    <option className=\"form-fields\" value={11}>11</option>\n                                    <option className=\"form-fields\" value={15}>15</option>\n                                    <option className=\"form-fields\" value={21}>21</option>\n                                </select>\n                            </div>\n                            <div>\n\n                                <p htmlFor=\"tournamentName\">Enter Tournament Name:</p>\n                                <input\n                                    className=\"form-fields\"\n                                    type=\"text\"\n                                    id=\"tournamentName\"\n                                    onChange={ handleTournamentName }\n                                    value={ tournamentName }/>\n                                <button className=\"add-btn add-btn__tournament__btn\" disabled={ isDisabled() }>Start Tournament</button>\n                            </div>\n                            <p className=\"error-messages\">{listOfPlayers.length < 4 ? \"Please enter four or more players\" :\n                                !correctPlayerNumber(listOfPlayers.length) ? \"Please enter 4, 8, 16,32, 64 ..... number of players\" :\n                                null}\n                        </p>\n                        </form>\n                    </div>\n\n                </div>\n                    <div className=\"tournament-form tournament-form__bottom animate__animated animate__flipInX\">\n                        <p>Previous Entrants:</p>\n                            <ul style={{display: 'flex', width: \"100%\", flexWrap: 'wrap', }}>\n                                {historicPlayerList.map((player, index) => \n                                <li className=\"historic-players\" \n                                key={index} \n                                disabled={ isExisitingName() }          \n                                value={ player.name }\n                                >{player.name}</li>)}\n                            </ul>\n                    </div>\n            </section>\n            <section style={{overflow: 'auto'}}  className=\"list-display animate__animated animate__flipInX\">\n                <p>Tournament Players:</p>\n                <ul className=\"player-list-container\">\n                        {listOfPlayers.map((player, index) => (\n                            <li className=\"player-list\" key={index}>{player.name}</li>\n                            ))}\n                </ul>\n            </section>\n        </div>\n    </div>\n    )\n}\n\nexport default TournamentSetup;","import { connect } from \"react-redux\";\nimport { tournamentStartAction, addPlayerNameAction, getHistoricPlayersAction } from \"../../data/actions.js\";\nimport TournamentSetup from \"./TournamentSetup\";\n\nconst mapStateToProps = state => {\n    return {\n        playerCount: state.playerCount,\n        listOfPlayers: state.listOfPlayers,\n        historicPlayerList: state.historicPlayerList\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n       startTournament: (tournamentData) => dispatch(tournamentStartAction(tournamentData)),\n       addPlayerName: (player) => dispatch(addPlayerNameAction(player)),\n       getHistoricPlayers: () => dispatch(getHistoricPlayersAction())\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TournamentSetup);","import { useState, useEffect } from \"react\";\n\n\nconst Game = ({ playerOne, playerTwo, submitWinner, isFinal, winningScore}) => {\n    \n    const [playerOneScore, setPlayerOneScore] = useState(0);\n    const [playerTwoScore, setPlayerTwoScore] = useState(0);\n\n    useEffect(() => {\n\n      const scores = {\n        playerAScore : playerOneScore,\n        playerBScore : playerTwoScore\n      }\n\n      if (playerOneScore === +winningScore) {\n        submitWinner(playerTwo, scores);\n      }\n      if (playerTwoScore === +winningScore) {\n        submitWinner(playerOne, scores);\n      }\n    }, [\n      playerOneScore,\n      playerTwoScore,\n      playerOne,\n      playerTwo,\n      winningScore,\n      submitWinner,\n    ]);\n    \n    const style = {\n      width: \"100%\"\n    }\n    \n    return (\n      <div>\n        <div style={ style } className=\"table animate__animated animate__flipInX\">\n            <div className=\"player-one\">\n              <p className={playerOneScore === +winningScore ? \"winner animate__animated animate__heartBeat\" : null}>{ playerOne.name }</p>\n\n              <button className=\"score-button\" disabled={playerOneScore === +winningScore || playerTwoScore === +winningScore} onClick={() => setPlayerOneScore(playerOneScore + 1)}>+</button>\n\n              <p>{ playerOneScore }</p>\n\n            </div>\n            \n            <div className=\"player-two\">\n\n                <p>{ playerTwoScore }</p>\n    \n                <button className=\"score-button\" disabled={playerOneScore === +winningScore || playerTwoScore === +winningScore}  onClick={ () => setPlayerTwoScore(playerTwoScore + 1)}>+</button>\n\n                <p className={playerTwoScore === +winningScore ? \"winner animate__animated animate__heartBeat\" : null}>{ playerTwo.name }</p>\n    \n              </div>\n        </div>\n    </div>\n    );\n};\n\nexport default Game;","import { connect } from \"react-redux\";\nimport { gameWinnerAction } from \"../../data/actions.js\";\nimport Game from \"./Game\";\n\nconst mapStateToProps = state => {\n    \n    return {\n        winningScore: state.winningScore,\n        tournamentId: state.tournamentId,\n        roundNumber: state.roundNumber,\n        listOfPlayers: state.listOfPlayers\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n       submitWinner: (player, scores) => dispatch(gameWinnerAction(player, scores)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","import React from 'react';\nimport Game from \"../Game\"; \n\n\nconst Rounds = ({ round, reset, submitRound, listOfPlayers, tournamentName, roundNumber, tournamentId, isFinal }) => {\n\n    return (\n      <div>\n        <h1 className=\"heading\" >{tournamentName}</h1>\n        <section className=\"games\">\n        {round.map((game) => (\n          <Game\n          key={game.id}\n          listOfPlayers={listOfPlayers}\n          playerOne={game.playerA}\n          playerTwo={game.playerB}\n          isFinal={round.length === 1}\n          />\n          ))}\n          \n        </section>\n        <div className=\"congratulations-image\">\n          {listOfPlayers.length === 1 ? <p className=\"congratulations  \">Congratulations {listOfPlayers[0].name}, you are the tournament winner!!!</p>: null}\n          </div>\n        <div className=\"back-to-home-container\">\n          <button className=\"add-btn\" onClick={reset}>Restart</button>\n          <p className=\"careful\">This will take you back to the home page</p>\n        </div>\n            {round.length === listOfPlayers.length && listOfPlayers.length > 1 ? <button className=\"add-btn\" onClick={() => submitRound(listOfPlayers, tournamentId, roundNumber)}> Submit All Rounds\n        </button> : null}\n      </div>\n    );\n};\nexport default Rounds;","import { connect } from \"react-redux\";\nimport Rounds from \"./Rounds\";\nimport { resetAction, submitRoundAction } from \"../../data/actions.js\";\n\nconst mapStateToProps = state => {\n    return {\n      round: state.listOfGames,\n      listOfWinners: state.listOfWinners,\n      listOfPlayers: state.listOfPlayers,\n      tournamentName: state.tournamentName,\n      roundNumber: state.roundNumber,\n      tournamentId: state.tournamentId,\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n       reset: () => dispatch(resetAction()),\n       submitRound: (listOfPlayers, tournamentId, roundNumber) => dispatch(submitRoundAction(listOfPlayers, tournamentId, roundNumber)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Rounds);","import TournamentSetup from \"../TournamentSetup\";\nimport Rounds from \"../Rounds\";\n\n\n\nconst App = ({ tournamentStarted }) =>(\n    \n    <div className=\"container\">\n        { \n            !tournamentStarted ? \n            <TournamentSetup /> : \n            <Rounds />     \n        }\n    </div>\n\n)\n\nexport default App;\n","import App from \"./App\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n    return {\n        tournamentStarted: state.tournamentStarted,\n    }\n}\n\nexport default connect(mapStateToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nconst initialState = {\n    playerName: \"\",\n    isFinished: false,\n    tournamentName: \"\",\n    tournamentId: \"\",\n    winningScore: 0,\n    roundNumber: 0,\n    listOfGames: [],\n    listOfPlayers: [],\n    historicPlayerList: [],\n    tournamentStarted: false,\n    }\n\nexport default initialState; ","import initialState  from \"./initial\";\nimport {v4 as uuid} from \"uuid\";\n\n\nconst startTournament = (state, {payload}) => ({\n    ...state, \n    listOfPlayers: randomizer([...state.listOfPlayers]),\n    tournamentName: payload.name, \n    tournamentStarted: true,\n    winningScore: payload.winningScore, \n    tournamentId: payload.id, \n    roundNumber: 1,\n    listOfGames: payload.games\n})\n\nconst randomizer = (listOfPlayers) => (listOfPlayers.sort(() => Math.random() - 0.5));\n\nconst reset = () => {\n    return {\n        ...initialState,\n    }\n}\n\nconst gameWinner = (state, {payload}) => {\n    return {\n      ...state,\n      listOfPlayers: [...state.listOfPlayers.filter((player) => player.id !== payload.player.id)],\n    };\n}\n\nconst newRound = (state, {payload}) => {\n    return {\n      ...state,\n      listOfGames: payload,\n    };\n}\n\n\nconst addNewPlayerAtStart = (state, {payload}) => {\n\n    const player = {\n        id : uuid(),\n        name : payload\n    };\n\n    return {\n        ...state,\n        listOfPlayers: [...state.listOfPlayers, player]\n    }\n}\n\nconst loadHistoricPlayers = (state, {payload}) => {\n\n    return {\n        ...state,\n        historicPlayerList: payload,\n    }\n}\n\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"START_TOURNAMENT\" : return startTournament(state, action);\n        case \"SUBMIT_ROUND\" : return newRound(state, action);\n        case \"WINNER\" : return gameWinner(state, action);\n        case \"ADD_PLAYER\" : return addNewPlayerAtStart(state, action);\n        case \"LOAD_HISTORIC_PLAYERS\" : return loadHistoricPlayers(state, action);\n        case \"RESET\" : return reset();\n        default : return state;\n        \n    }\n}\n\nexport default reducer;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport initial from \"./initial\";\nimport reducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\n\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer,\n    initial,\n    composeEnhancers(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from \"./data/store\";\nimport \"./styles/main.scss\";\n\n\n\n\n  ReactDOM.render(\n        <React.StrictMode>\n          <Provider store={ store }>\n            <App />\n          </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n\n      );\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}